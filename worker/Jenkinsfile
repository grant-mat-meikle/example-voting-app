pipeline {
    agent{
        docker{
            image 'maven:3.6.1-jdk-8-alpine'
            args '-v $HOME/.m2:/root/.m2'
        }
    }

    stages {
        stage('build') {
            when{
                changeset "**/worker/**"
            }
            steps {
                echo 'Compile worker app'
                dir('worker'){
                    sh 'mvn compile'
                } 
            }
        }
        stage('test') {
            when{
                changeset "**/worker/**"
            }
            steps {
                echo 'Running unit tests on worker app'
                dir('worker'){
                    sh 'mvn clean test'
                }
            }
        }
        stage('package') {
            when{
                branch 'master'
                changeset "**/worker/**"
            }
            steps {
                echo 'Packaging worker app'
                dir('worker'){
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
        stage('docker-package') {
            when{
                /*branch 'master'*/
                changeset "**/worker/**"
            }
            steps {
                echo 'Packaging worker app image with docker'
                script{
                    docker.withRegistry('https://index.docker.io/v1', 'dockerLogin') {
                        def workerImage = docker.build("xs98zprt/worker:${env.BUILD_ID}","./worker")
                        /* Push the container to the custom Registry */
                        workerImage.push()
                        workerImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }

    post{
        always{
            echo "Pipeline for worker is complete.."
        }
        failure{
            echo "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
        success{
            echo "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
    }
}
